<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Ryan Tolboom</title>
    <link>https://using.tech/posts/</link>
    <description>Recent content in Posts on Ryan Tolboom</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 07 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://using.tech/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Automating TP-Link EAP225 Configuration</title>
      <link>https://using.tech/posts/eap225/</link>
      <pubDate>Sat, 07 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://using.tech/posts/eap225/</guid>
      <description>Purpose As part of my continued efforts to automate the deployment of my home network, I ran into an interesting situation. Because I was using both Ubiquiti and TP-Link devices I needed to run two controllers to achieve my deployment goals. Running just one controller, the fabled UniFi controller, turned out to be enough of a pain ( here is a script based on that article BTW) and enough of a resource hog that I decided to forgo the setting up the Omada controller and just create my own solution for configuring wireless access points automatically.</description>
    </item>
    
    <item>
      <title>Automating a Debian Install and Tracking Config Changes</title>
      <link>https://using.tech/posts/autodeb/</link>
      <pubDate>Thu, 22 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://using.tech/posts/autodeb/</guid>
      <description>Purpose My original homelab consisted of a Dell R710 which was a ton of fun to play with, but ultimately the turbojet noises and utility bill led me to bring it in to work and purchase a couple of broken Dell R610s. Between the two of them, I made one working one which has served (pun intended) me well.
 In an effort to further lower my utility bill, move the level of ambient noise from annoying to quiet, and play with some new hardware Iâ€™ve decided to migrate to a small form factor (SFF) enterprise workstation.</description>
    </item>
    
    <item>
      <title>Testing the 3D Printing Waters - Chuck Box</title>
      <link>https://using.tech/posts/chuckbox/</link>
      <pubDate>Fri, 13 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://using.tech/posts/chuckbox/</guid>
      <description>Motivation I&amp;rsquo;ve started spending more time family camping than solo backpacking and this has necessitated a change in the way I do things. A cat-food container alcohol stove and ziplock bag of dehydrated BBQ spaghetti weren&amp;rsquo;t going to cut it anymore. Also, starting a fire, burning it down to coals, heating a pan, and cooking dinner turned out to be a little too time consuming for my fresh-from-the-playground toddlers. I decided I needed a family camp cooking kit.</description>
    </item>
    
    <item>
      <title>Extended Network Growth in jr - Part 1</title>
      <link>https://using.tech/posts/jr_2/</link>
      <pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://using.tech/posts/jr_2/</guid>
      <description>Goal With the basics of the jr network established (see Introducing jr: A Peer-to-Peer Social Network), I wanted to simulate the growth of the extended network and find a mathematical model that describes this growth.
core/extended-network-test builds a test network of 100 nodes each following 10 random nodes. It then performs 1000 random syncs (two nodes chosen at random sync with each other) and records the average extended network size at each iteration.</description>
    </item>
    
    <item>
      <title>Introducing jr: A Peer-to-Peer Social Network</title>
      <link>https://using.tech/posts/jr_1/</link>
      <pubDate>Wed, 18 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://using.tech/posts/jr_1/</guid>
      <description>Intro A friend of mine, John R., has been extolling the virtues of Clojure for years now. At one point, I bought Clojure for the Brave and True, read it, and implemented a few toy programs. It&amp;rsquo;s an excellent book. Recently I found myself looking for a language to implement a project to measure analyze a Secure Scuttlebutt style social network. While trying to decide between Guile, Chicken Scheme, and Racket I remembered John&amp;rsquo;s advice and instead went with Clojure.</description>
    </item>
    
    <item>
      <title>Trying Out Spacemacs</title>
      <link>https://using.tech/posts/spacemacs/</link>
      <pubDate>Tue, 18 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://using.tech/posts/spacemacs/</guid>
      <description>Intro In high school, I was given a Sun 3/60 workstation and given instructions to set everything up and learn how to use vi. &amp;ldquo;You&amp;rsquo;ll never find a better editor&amp;rdquo; my boss told me. In retrospect, I think you&amp;rsquo;ll never find a better editing concept, and that&amp;rsquo;s modal editing.
Developers spend far more time reading than they do typing. Breaking reading and writing (or inserting) into two discrete modes seems natural after you take a moment to get used to it.</description>
    </item>
    
  </channel>
</rss>
